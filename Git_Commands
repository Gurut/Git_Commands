-- First Time Git Setup -- Customization of the git environment on your computer

	--Your Identity--
		--Set your user name and e-mail address

$ git config --global user.name "Gurut"
$ git config --global user.email "samettonyali29@gmail.com"

You can run these commands without "global" parameter to change these values for specific projects when you are in those projects' git folders.

		--Set default text editor--
$ git config --global core.editor vi

		--Check your configuration settings--
$ git config --list

		-- Retrieve a specific key's value--
$ git config <keyvalue>
$ git config user.name

		--Help--
$ git help <verb>
$ git help config

		--For a quick refresher--
$ git <verb> -h
$ git config -h

	--Initializing a repository in an existing directory--
$ cd ~/user/theproject	//Go to that project's directory
$ git init	//Initialize the git project. This command creates .git folder that contains all of necessary repository files
$ git add <file or files>	//Specify the files that you want to track
$ git commit -m 'Comments for the commit'

	--Cloning an existing repository--*
$ git clone <url> <directory_name>**

*the command is "clone" and not "checkout". This is an importantdistinction — instead of getting just a working copy, Git receives a full copy of nearly all data thatthe server has. Every version of every file for the history of the project is pulled down by defaultwhen you run git clone.
**Optional

		--Recording changes to the Repository--
	--Checking the Status of the Files--
$ git status
$ git status -s //for a simplified output

	--Tracking New Files--
$ git add <file_name>	//think of it more as “add precisely this content to the next commit”rather than “add this file to the project”
$ 


* Create a .gitignore file for the files that you do not want Git to automatically add or even show you as being untracked.

Example: 
$ cat .gitignore
# Ignore any files ending in ".o" or ".a"
*.[oa]
# Ignore all files whose name ends with a tilde
*~
# Ignore all .a files
*.a
# but do track lib.a, even though you are ignoring .a files above
!lib.a
# only ignore the TODO file in the current directory, not subdir/TODO
/TODO
# ignore all files in any directory named build
build/
# Ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt
# Ignore all .pdf files in the doc/ directory and any of its subdirectories
doc/**/*.pdf





…or create a new repository on the command line

echo "# OnlineVotinginItsInfancy" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/Gurut/OnlineVotinginItsInfancy.git
git push -u origin master


…or push an existing repository from the command line

git remote add origin https://github.com/Gurut/OnlineVotinginItsInfancy.git
git push -u origin master
